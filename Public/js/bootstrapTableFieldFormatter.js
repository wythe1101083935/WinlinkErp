/**
+----------------------------------------------------------
* bootstrapTable格式化字段函数
+----------------------------------------------------------
* detail:
+----------------------------------------------------------
* TIME:2018-01-17 10:18:14
+----------------------------------------------------------
* author:wythe(汪志虹)
+----------------------------------------------------------
*/

/*
+----------------------------------------------------------
* js Date对象添加时间转换
+----------------------------------------------------------
* @param  ;
+----------------------------------------------------------
* @return 
+----------------------------------------------------------
*/
Date.prototype.ToDateString = function() {//给js的日期对象加上转换函数
    var y = this.getFullYear();
    var m = (this.getMonth() + 1) > 9 ? (this.getMonth() + 1) : '0'+(this.getMonth() + 1);
    var d = this.getDate()>9 ? this.getDate() : '0'+this.getDate();
    return y+'-'+m+'-'+d;
    //return (y+'-'+m+'-'+d).slice(2);   
};
/*
 +----------------------------------------------------------
 * 格式化有总个数的序号
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return json{status:bool,msg:string,data:mix,code:int}
 +----------------------------------------------------------
*/
function idFormatter(value, row, index){
    return  (index+1)+($total > 0 ? '/'+$total : '');
}
/*
 +----------------------------------------------------------
 * 空
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return json{status:bool,msg:string,data:mix,code:int}
 +----------------------------------------------------------
*/
function emptyFormatter(_value){
  return _value ?  _value : '-';
}
/*
 +----------------------------------------------------------
 * 格式化序号
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return 
 +----------------------------------------------------------
*/
function indexFormatter(value, row, index) {
    return (index+1);
}

/*
 +----------------------------------------------------------
 * 格式化空白
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return 
 +----------------------------------------------------------
*/
function NullFormatter(_value) {
    return _value ? _value : '-';
}

/*
 +----------------------------------------------------------
 * 格式化时间
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return 
 +----------------------------------------------------------
*/
function timeFormatter(_value) {
    var timeStamp = parseInt(_value);
    return timeStamp > 0 ? (new Date(timeStamp* 1000)).ToDateString() : '-';
}

/*
 +----------------------------------------------------------
 * 格式化天数
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return 
 +----------------------------------------------------------
*/
function daysFormatter(_value) {
    var timeStamp = parseInt(_value);
    return timeStamp > 0 ? (Math.floor(_value*1000/86400000))+'天' : '-';
}

function stFormatter(_value) {
  return _value ? _value : '-';
}
/*
 +----------------------------------------------------------
 * 长信息加title
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return json{status:bool,msg:string,data:mix,code:int}
 +----------------------------------------------------------
*/
function msgFormatter(_value){
    return '<span title="'+_value+'">'+_value+'</span>'
}

/*
 +----------------------------------------------------------
 * 普通状态回调
 +----------------------------------------------------------
 * @param  ;
 +----------------------------------------------------------
 * @return json{status:bool,msg:string,data:mix,code:int}
 +----------------------------------------------------------
*/
function statusFormatter(_value){
    return _value ? '<font style="color:#5FB878">成功</font>' : '<font style="color:#FF5722">失败</font>'
} 